<?xml version="1.0" encoding="utf-8"?>
<definitions xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:s0="http://ntg.webs.innerhost.com/webevents/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:i0="http://tempuri.org/cnEvents.xsd" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" targetNamespace="http://ntg.webs.innerhost.com/webevents/" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <import namespace="http://tempuri.org/cnEvents.xsd" location="http://ntg.webs.innerhost.com/WebEvents/events.asmx?schema=cnEvents" />
  <types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://ntg.webs.innerhost.com/webevents/">
      <s:import namespace="http://tempuri.org/cnEvents.xsd" />
      <s:element name="RegisterUser">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="MailBox" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="RegisterUserResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="RegisterUserResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ActivateUser">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="UserPwd" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ActivateUserResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ActivateUserResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DeactivateUser">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="UserPwd" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DeactivateUserResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="DeactivateUserResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DeleteUser">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="UserPwd" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DeleteUserResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="DeleteUserResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetNewPassword">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OldUserPwd" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetNewPasswordResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetNewPasswordResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ChangePassword">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="OldUserPwd" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="NewUserPwd" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ChangePasswordResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ChangePasswordResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetUserActivity">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="UserPwd" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetUserActivityResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetUserActivityResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AddEvent">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="UserPwd" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="EventCategory" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="EventType" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="EventDescription" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="EventSource" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="EventErrorNum" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AddEventResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AddEventResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ClearEvent">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="UserPwd" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="EventID" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ClearEventResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ClearEventResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ClearEventRange">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="UserPwd" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="StartingEventID" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="EndingEventID" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ClearEventRangeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ClearEventRangeResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ClearAllEvents">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="UserPwd" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ClearAllEventsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ClearAllEventsResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetEvent">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="UserPwd" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="EventID" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetEventResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetEventResult">
              <s:complexType>
                <s:sequence>
                  <s:any namespace="http://tempuri.org/cnEvents.xsd" />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetEventsRange">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="UserPwd" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="StartingEventID" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="EndingEventID" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetEventsRangeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetEventsRangeResult">
              <s:complexType>
                <s:sequence>
                  <s:any namespace="http://tempuri.org/cnEvents.xsd" />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetEventID">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="UserPwd" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetEventIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetEventIDResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SearchEvents">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="UserPwd" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="StartingEventID" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="EndingEventID" type="s:int" />
            <s:element minOccurs="0" maxOccurs="1" name="Partial_EventCategory" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="EventType" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="StartEventDate" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="EndEventDate" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Partial_EventDescription" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Partial_EventSource" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Partial_EventErrorNumber" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SearchEventsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="SearchEventsResult">
              <s:complexType>
                <s:sequence>
                  <s:any namespace="http://tempuri.org/cnEvents.xsd" />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="string" nillable="true" type="s:string" />
      <s:element name="cnEvents" nillable="true">
        <s:complexType>
          <s:sequence>
            <s:any namespace="http://tempuri.org/cnEvents.xsd" />
          </s:sequence>
        </s:complexType>
      </s:element>
    </s:schema>
  </types>
  <message name="RegisterUserSoapIn">
    <part name="parameters" element="s0:RegisterUser" />
  </message>
  <message name="RegisterUserSoapOut">
    <part name="parameters" element="s0:RegisterUserResponse" />
  </message>
  <message name="ActivateUserSoapIn">
    <part name="parameters" element="s0:ActivateUser" />
  </message>
  <message name="ActivateUserSoapOut">
    <part name="parameters" element="s0:ActivateUserResponse" />
  </message>
  <message name="DeactivateUserSoapIn">
    <part name="parameters" element="s0:DeactivateUser" />
  </message>
  <message name="DeactivateUserSoapOut">
    <part name="parameters" element="s0:DeactivateUserResponse" />
  </message>
  <message name="DeleteUserSoapIn">
    <part name="parameters" element="s0:DeleteUser" />
  </message>
  <message name="DeleteUserSoapOut">
    <part name="parameters" element="s0:DeleteUserResponse" />
  </message>
  <message name="GetNewPasswordSoapIn">
    <part name="parameters" element="s0:GetNewPassword" />
  </message>
  <message name="GetNewPasswordSoapOut">
    <part name="parameters" element="s0:GetNewPasswordResponse" />
  </message>
  <message name="ChangePasswordSoapIn">
    <part name="parameters" element="s0:ChangePassword" />
  </message>
  <message name="ChangePasswordSoapOut">
    <part name="parameters" element="s0:ChangePasswordResponse" />
  </message>
  <message name="GetUserActivitySoapIn">
    <part name="parameters" element="s0:GetUserActivity" />
  </message>
  <message name="GetUserActivitySoapOut">
    <part name="parameters" element="s0:GetUserActivityResponse" />
  </message>
  <message name="AddEventSoapIn">
    <part name="parameters" element="s0:AddEvent" />
  </message>
  <message name="AddEventSoapOut">
    <part name="parameters" element="s0:AddEventResponse" />
  </message>
  <message name="ClearEventSoapIn">
    <part name="parameters" element="s0:ClearEvent" />
  </message>
  <message name="ClearEventSoapOut">
    <part name="parameters" element="s0:ClearEventResponse" />
  </message>
  <message name="ClearEventRangeSoapIn">
    <part name="parameters" element="s0:ClearEventRange" />
  </message>
  <message name="ClearEventRangeSoapOut">
    <part name="parameters" element="s0:ClearEventRangeResponse" />
  </message>
  <message name="ClearAllEventsSoapIn">
    <part name="parameters" element="s0:ClearAllEvents" />
  </message>
  <message name="ClearAllEventsSoapOut">
    <part name="parameters" element="s0:ClearAllEventsResponse" />
  </message>
  <message name="GetEventSoapIn">
    <part name="parameters" element="s0:GetEvent" />
  </message>
  <message name="GetEventSoapOut">
    <part name="parameters" element="s0:GetEventResponse" />
  </message>
  <message name="GetEventsRangeSoapIn">
    <part name="parameters" element="s0:GetEventsRange" />
  </message>
  <message name="GetEventsRangeSoapOut">
    <part name="parameters" element="s0:GetEventsRangeResponse" />
  </message>
  <message name="GetEventIDSoapIn">
    <part name="parameters" element="s0:GetEventID" />
  </message>
  <message name="GetEventIDSoapOut">
    <part name="parameters" element="s0:GetEventIDResponse" />
  </message>
  <message name="SearchEventsSoapIn">
    <part name="parameters" element="s0:SearchEvents" />
  </message>
  <message name="SearchEventsSoapOut">
    <part name="parameters" element="s0:SearchEventsResponse" />
  </message>
  <message name="RegisterUserHttpGetIn">
    <part name="MailBox" type="s:string" />
  </message>
  <message name="RegisterUserHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="ActivateUserHttpGetIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
  </message>
  <message name="ActivateUserHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="DeactivateUserHttpGetIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
  </message>
  <message name="DeactivateUserHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="DeleteUserHttpGetIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
  </message>
  <message name="DeleteUserHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="GetNewPasswordHttpGetIn">
    <part name="UserID" type="s:string" />
    <part name="OldUserPwd" type="s:string" />
  </message>
  <message name="GetNewPasswordHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="ChangePasswordHttpGetIn">
    <part name="UserID" type="s:string" />
    <part name="OldUserPwd" type="s:string" />
    <part name="NewUserPwd" type="s:string" />
  </message>
  <message name="ChangePasswordHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="GetUserActivityHttpGetIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
  </message>
  <message name="GetUserActivityHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="AddEventHttpGetIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
    <part name="EventCategory" type="s:string" />
    <part name="EventType" type="s:string" />
    <part name="EventDescription" type="s:string" />
    <part name="EventSource" type="s:string" />
    <part name="EventErrorNum" type="s:string" />
  </message>
  <message name="AddEventHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="ClearEventHttpGetIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
    <part name="EventID" type="s:string" />
  </message>
  <message name="ClearEventHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="ClearEventRangeHttpGetIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
    <part name="StartingEventID" type="s:string" />
    <part name="EndingEventID" type="s:string" />
  </message>
  <message name="ClearEventRangeHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="ClearAllEventsHttpGetIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
  </message>
  <message name="ClearAllEventsHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="GetEventHttpGetIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
    <part name="EventID" type="s:string" />
  </message>
  <message name="GetEventHttpGetOut">
    <part name="Body" element="s0:cnEvents" />
  </message>
  <message name="GetEventsRangeHttpGetIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
    <part name="StartingEventID" type="s:string" />
    <part name="EndingEventID" type="s:string" />
  </message>
  <message name="GetEventsRangeHttpGetOut">
    <part name="Body" element="s0:cnEvents" />
  </message>
  <message name="GetEventIDHttpGetIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
  </message>
  <message name="GetEventIDHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="SearchEventsHttpGetIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
    <part name="StartingEventID" type="s:string" />
    <part name="EndingEventID" type="s:string" />
    <part name="Partial_EventCategory" type="s:string" />
    <part name="EventType" type="s:string" />
    <part name="StartEventDate" type="s:string" />
    <part name="EndEventDate" type="s:string" />
    <part name="Partial_EventDescription" type="s:string" />
    <part name="Partial_EventSource" type="s:string" />
    <part name="Partial_EventErrorNumber" type="s:string" />
  </message>
  <message name="SearchEventsHttpGetOut">
    <part name="Body" element="s0:cnEvents" />
  </message>
  <message name="RegisterUserHttpPostIn">
    <part name="MailBox" type="s:string" />
  </message>
  <message name="RegisterUserHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="ActivateUserHttpPostIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
  </message>
  <message name="ActivateUserHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="DeactivateUserHttpPostIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
  </message>
  <message name="DeactivateUserHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="DeleteUserHttpPostIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
  </message>
  <message name="DeleteUserHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="GetNewPasswordHttpPostIn">
    <part name="UserID" type="s:string" />
    <part name="OldUserPwd" type="s:string" />
  </message>
  <message name="GetNewPasswordHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="ChangePasswordHttpPostIn">
    <part name="UserID" type="s:string" />
    <part name="OldUserPwd" type="s:string" />
    <part name="NewUserPwd" type="s:string" />
  </message>
  <message name="ChangePasswordHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="GetUserActivityHttpPostIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
  </message>
  <message name="GetUserActivityHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="AddEventHttpPostIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
    <part name="EventCategory" type="s:string" />
    <part name="EventType" type="s:string" />
    <part name="EventDescription" type="s:string" />
    <part name="EventSource" type="s:string" />
    <part name="EventErrorNum" type="s:string" />
  </message>
  <message name="AddEventHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="ClearEventHttpPostIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
    <part name="EventID" type="s:string" />
  </message>
  <message name="ClearEventHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="ClearEventRangeHttpPostIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
    <part name="StartingEventID" type="s:string" />
    <part name="EndingEventID" type="s:string" />
  </message>
  <message name="ClearEventRangeHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="ClearAllEventsHttpPostIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
  </message>
  <message name="ClearAllEventsHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="GetEventHttpPostIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
    <part name="EventID" type="s:string" />
  </message>
  <message name="GetEventHttpPostOut">
    <part name="Body" element="s0:cnEvents" />
  </message>
  <message name="GetEventsRangeHttpPostIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
    <part name="StartingEventID" type="s:string" />
    <part name="EndingEventID" type="s:string" />
  </message>
  <message name="GetEventsRangeHttpPostOut">
    <part name="Body" element="s0:cnEvents" />
  </message>
  <message name="GetEventIDHttpPostIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
  </message>
  <message name="GetEventIDHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="SearchEventsHttpPostIn">
    <part name="UserID" type="s:string" />
    <part name="UserPwd" type="s:string" />
    <part name="StartingEventID" type="s:string" />
    <part name="EndingEventID" type="s:string" />
    <part name="Partial_EventCategory" type="s:string" />
    <part name="EventType" type="s:string" />
    <part name="StartEventDate" type="s:string" />
    <part name="EndEventDate" type="s:string" />
    <part name="Partial_EventDescription" type="s:string" />
    <part name="Partial_EventSource" type="s:string" />
    <part name="Partial_EventErrorNumber" type="s:string" />
  </message>
  <message name="SearchEventsHttpPostOut">
    <part name="Body" element="s0:cnEvents" />
  </message>
  <portType name="eventsSoap">
    <operation name="RegisterUser">
      <documentation>Registers a new user with the events web service. The registration process requires a &lt;u&gt;valid&lt;/u&gt; mailbox. The actual user ID and password will be send to the mailbox. After calling this method, you must call &lt;a href="events.asmx?op=ActivateUser"&gt;ActivateUser&lt;/a&gt; to activate the created user.</documentation>
      <input message="s0:RegisterUserSoapIn" />
      <output message="s0:RegisterUserSoapOut" />
    </operation>
    <operation name="ActivateUser">
      <documentation>Activates a registered user. You &lt;b&gt;must&lt;/b&gt; call &lt;a href="events.asmx?op=RegisterUser"&gt;RegisterUser&lt;/a&gt; prior to calling this method.</documentation>
      <input message="s0:ActivateUserSoapIn" />
      <output message="s0:ActivateUserSoapOut" />
    </operation>
    <operation name="DeactivateUser">
      <documentation>Deactivates a registered user.</documentation>
      <input message="s0:DeactivateUserSoapIn" />
      <output message="s0:DeactivateUserSoapOut" />
    </operation>
    <operation name="DeleteUser">
      <documentation>Deletes a registered user. The deletion is &lt;u&gt;permanent&lt;/u&gt;.</documentation>
      <input message="s0:DeleteUserSoapIn" />
      <output message="s0:DeleteUserSoapOut" />
    </operation>
    <operation name="GetNewPassword">
      <documentation>Creates a new random password for a user. If successful, the method returns the password in the form &lt;b&gt;OK&lt;i&gt;NewPassword&lt;/i&gt;&lt;/b&gt;.</documentation>
      <input message="s0:GetNewPasswordSoapIn" />
      <output message="s0:GetNewPasswordSoapOut" />
    </operation>
    <operation name="ChangePassword">
      <documentation>Changes the password of a user.</documentation>
      <input message="s0:ChangePasswordSoapIn" />
      <output message="s0:ChangePasswordSoapOut" />
    </operation>
    <operation name="GetUserActivity">
      <documentation>Returns the number of a users' events that are currently in the database. If the method is successful, number of events is returned in the form &lt;b&gt;OK&lt;i&gt;NumberOfEvents&lt;/i&gt;&lt;/b&gt;.</documentation>
      <input message="s0:GetUserActivitySoapIn" />
      <output message="s0:GetUserActivitySoapOut" />
    </operation>
    <operation name="AddEvent">
      <documentation>Adds a new event to the database. If successful, the method returns the created event id in the form &lt;b&gt;OK&lt;i&gt;EventID&lt;/i&gt;&lt;/b&gt;.</documentation>
      <input message="s0:AddEventSoapIn" />
      <output message="s0:AddEventSoapOut" />
    </operation>
    <operation name="ClearEvent">
      <documentation>Deletes an event from the database. The deletion is &lt;u&gt;permanent&lt;/u&gt;.</documentation>
      <input message="s0:ClearEventSoapIn" />
      <output message="s0:ClearEventSoapOut" />
    </operation>
    <operation name="ClearEventRange">
      <documentation>Deletes a range of events from the database based on the event id. The deletion is &lt;u&gt;permanent&lt;/u&gt;.</documentation>
      <input message="s0:ClearEventRangeSoapIn" />
      <output message="s0:ClearEventRangeSoapOut" />
    </operation>
    <operation name="ClearAllEvents">
      <documentation>Deletes all events from the database. The deletion is &lt;u&gt;permanent&lt;/u&gt;.</documentation>
      <input message="s0:ClearAllEventsSoapIn" />
      <output message="s0:ClearAllEventsSoapOut" />
    </operation>
    <operation name="GetEvent">
      <documentation>Retrieves a single event from the database, based on the event ID. Returns a dataset. Upon return, check the &lt;i&gt;ExtendedProperties("WebMethodResult")&lt;/i&gt; dataset property to determine the success or failure of the operation.</documentation>
      <input message="s0:GetEventSoapIn" />
      <output message="s0:GetEventSoapOut" />
    </operation>
    <operation name="GetEventsRange">
      <documentation>Retrieves a range of events from the database, based on the event ID. Returns a dataset. Upon return, check the &lt;i&gt;ExtendedProperties("WebMethodResult")&lt;/i&gt; dataset property to determine the success or failure of the operation.</documentation>
      <input message="s0:GetEventsRangeSoapIn" />
      <output message="s0:GetEventsRangeSoapOut" />
    </operation>
    <operation name="GetEventID">
      <documentation>Returns the event id of the event last inserted into the database. Event IDs are incremented by 1 with each successive event insertion. If the method is successful, the event id is returned in the form &lt;b&gt;OK&lt;i&gt;LastEventID&lt;/i&gt;&lt;/b&gt;.</documentation>
      <input message="s0:GetEventIDSoapIn" />
      <output message="s0:GetEventIDSoapOut" />
    </operation>
    <operation name="SearchEvents">
      <documentation>Retrieves a set of events from the database, based on various criteria. Returns a dataset. Upon return, check the &lt;i&gt;ExtendedProperties("WebMethodResult")&lt;/i&gt; dataset property to determine the success or failure of the operation. See the &lt;a href="docs.htm"&gt;documentation&lt;/a&gt; for an explanation of the method parameters.</documentation>
      <input message="s0:SearchEventsSoapIn" />
      <output message="s0:SearchEventsSoapOut" />
    </operation>
  </portType>
  <portType name="eventsHttpGet">
    <operation name="RegisterUser">
      <documentation>Registers a new user with the events web service. The registration process requires a &lt;u&gt;valid&lt;/u&gt; mailbox. The actual user ID and password will be send to the mailbox. After calling this method, you must call &lt;a href="events.asmx?op=ActivateUser"&gt;ActivateUser&lt;/a&gt; to activate the created user.</documentation>
      <input message="s0:RegisterUserHttpGetIn" />
      <output message="s0:RegisterUserHttpGetOut" />
    </operation>
    <operation name="ActivateUser">
      <documentation>Activates a registered user. You &lt;b&gt;must&lt;/b&gt; call &lt;a href="events.asmx?op=RegisterUser"&gt;RegisterUser&lt;/a&gt; prior to calling this method.</documentation>
      <input message="s0:ActivateUserHttpGetIn" />
      <output message="s0:ActivateUserHttpGetOut" />
    </operation>
    <operation name="DeactivateUser">
      <documentation>Deactivates a registered user.</documentation>
      <input message="s0:DeactivateUserHttpGetIn" />
      <output message="s0:DeactivateUserHttpGetOut" />
    </operation>
    <operation name="DeleteUser">
      <documentation>Deletes a registered user. The deletion is &lt;u&gt;permanent&lt;/u&gt;.</documentation>
      <input message="s0:DeleteUserHttpGetIn" />
      <output message="s0:DeleteUserHttpGetOut" />
    </operation>
    <operation name="GetNewPassword">
      <documentation>Creates a new random password for a user. If successful, the method returns the password in the form &lt;b&gt;OK&lt;i&gt;NewPassword&lt;/i&gt;&lt;/b&gt;.</documentation>
      <input message="s0:GetNewPasswordHttpGetIn" />
      <output message="s0:GetNewPasswordHttpGetOut" />
    </operation>
    <operation name="ChangePassword">
      <documentation>Changes the password of a user.</documentation>
      <input message="s0:ChangePasswordHttpGetIn" />
      <output message="s0:ChangePasswordHttpGetOut" />
    </operation>
    <operation name="GetUserActivity">
      <documentation>Returns the number of a users' events that are currently in the database. If the method is successful, number of events is returned in the form &lt;b&gt;OK&lt;i&gt;NumberOfEvents&lt;/i&gt;&lt;/b&gt;.</documentation>
      <input message="s0:GetUserActivityHttpGetIn" />
      <output message="s0:GetUserActivityHttpGetOut" />
    </operation>
    <operation name="AddEvent">
      <documentation>Adds a new event to the database. If successful, the method returns the created event id in the form &lt;b&gt;OK&lt;i&gt;EventID&lt;/i&gt;&lt;/b&gt;.</documentation>
      <input message="s0:AddEventHttpGetIn" />
      <output message="s0:AddEventHttpGetOut" />
    </operation>
    <operation name="ClearEvent">
      <documentation>Deletes an event from the database. The deletion is &lt;u&gt;permanent&lt;/u&gt;.</documentation>
      <input message="s0:ClearEventHttpGetIn" />
      <output message="s0:ClearEventHttpGetOut" />
    </operation>
    <operation name="ClearEventRange">
      <documentation>Deletes a range of events from the database based on the event id. The deletion is &lt;u&gt;permanent&lt;/u&gt;.</documentation>
      <input message="s0:ClearEventRangeHttpGetIn" />
      <output message="s0:ClearEventRangeHttpGetOut" />
    </operation>
    <operation name="ClearAllEvents">
      <documentation>Deletes all events from the database. The deletion is &lt;u&gt;permanent&lt;/u&gt;.</documentation>
      <input message="s0:ClearAllEventsHttpGetIn" />
      <output message="s0:ClearAllEventsHttpGetOut" />
    </operation>
    <operation name="GetEvent">
      <documentation>Retrieves a single event from the database, based on the event ID. Returns a dataset. Upon return, check the &lt;i&gt;ExtendedProperties("WebMethodResult")&lt;/i&gt; dataset property to determine the success or failure of the operation.</documentation>
      <input message="s0:GetEventHttpGetIn" />
      <output message="s0:GetEventHttpGetOut" />
    </operation>
    <operation name="GetEventsRange">
      <documentation>Retrieves a range of events from the database, based on the event ID. Returns a dataset. Upon return, check the &lt;i&gt;ExtendedProperties("WebMethodResult")&lt;/i&gt; dataset property to determine the success or failure of the operation.</documentation>
      <input message="s0:GetEventsRangeHttpGetIn" />
      <output message="s0:GetEventsRangeHttpGetOut" />
    </operation>
    <operation name="GetEventID">
      <documentation>Returns the event id of the event last inserted into the database. Event IDs are incremented by 1 with each successive event insertion. If the method is successful, the event id is returned in the form &lt;b&gt;OK&lt;i&gt;LastEventID&lt;/i&gt;&lt;/b&gt;.</documentation>
      <input message="s0:GetEventIDHttpGetIn" />
      <output message="s0:GetEventIDHttpGetOut" />
    </operation>
    <operation name="SearchEvents">
      <documentation>Retrieves a set of events from the database, based on various criteria. Returns a dataset. Upon return, check the &lt;i&gt;ExtendedProperties("WebMethodResult")&lt;/i&gt; dataset property to determine the success or failure of the operation. See the &lt;a href="docs.htm"&gt;documentation&lt;/a&gt; for an explanation of the method parameters.</documentation>
      <input message="s0:SearchEventsHttpGetIn" />
      <output message="s0:SearchEventsHttpGetOut" />
    </operation>
  </portType>
  <portType name="eventsHttpPost">
    <operation name="RegisterUser">
      <documentation>Registers a new user with the events web service. The registration process requires a &lt;u&gt;valid&lt;/u&gt; mailbox. The actual user ID and password will be send to the mailbox. After calling this method, you must call &lt;a href="events.asmx?op=ActivateUser"&gt;ActivateUser&lt;/a&gt; to activate the created user.</documentation>
      <input message="s0:RegisterUserHttpPostIn" />
      <output message="s0:RegisterUserHttpPostOut" />
    </operation>
    <operation name="ActivateUser">
      <documentation>Activates a registered user. You &lt;b&gt;must&lt;/b&gt; call &lt;a href="events.asmx?op=RegisterUser"&gt;RegisterUser&lt;/a&gt; prior to calling this method.</documentation>
      <input message="s0:ActivateUserHttpPostIn" />
      <output message="s0:ActivateUserHttpPostOut" />
    </operation>
    <operation name="DeactivateUser">
      <documentation>Deactivates a registered user.</documentation>
      <input message="s0:DeactivateUserHttpPostIn" />
      <output message="s0:DeactivateUserHttpPostOut" />
    </operation>
    <operation name="DeleteUser">
      <documentation>Deletes a registered user. The deletion is &lt;u&gt;permanent&lt;/u&gt;.</documentation>
      <input message="s0:DeleteUserHttpPostIn" />
      <output message="s0:DeleteUserHttpPostOut" />
    </operation>
    <operation name="GetNewPassword">
      <documentation>Creates a new random password for a user. If successful, the method returns the password in the form &lt;b&gt;OK&lt;i&gt;NewPassword&lt;/i&gt;&lt;/b&gt;.</documentation>
      <input message="s0:GetNewPasswordHttpPostIn" />
      <output message="s0:GetNewPasswordHttpPostOut" />
    </operation>
    <operation name="ChangePassword">
      <documentation>Changes the password of a user.</documentation>
      <input message="s0:ChangePasswordHttpPostIn" />
      <output message="s0:ChangePasswordHttpPostOut" />
    </operation>
    <operation name="GetUserActivity">
      <documentation>Returns the number of a users' events that are currently in the database. If the method is successful, number of events is returned in the form &lt;b&gt;OK&lt;i&gt;NumberOfEvents&lt;/i&gt;&lt;/b&gt;.</documentation>
      <input message="s0:GetUserActivityHttpPostIn" />
      <output message="s0:GetUserActivityHttpPostOut" />
    </operation>
    <operation name="AddEvent">
      <documentation>Adds a new event to the database. If successful, the method returns the created event id in the form &lt;b&gt;OK&lt;i&gt;EventID&lt;/i&gt;&lt;/b&gt;.</documentation>
      <input message="s0:AddEventHttpPostIn" />
      <output message="s0:AddEventHttpPostOut" />
    </operation>
    <operation name="ClearEvent">
      <documentation>Deletes an event from the database. The deletion is &lt;u&gt;permanent&lt;/u&gt;.</documentation>
      <input message="s0:ClearEventHttpPostIn" />
      <output message="s0:ClearEventHttpPostOut" />
    </operation>
    <operation name="ClearEventRange">
      <documentation>Deletes a range of events from the database based on the event id. The deletion is &lt;u&gt;permanent&lt;/u&gt;.</documentation>
      <input message="s0:ClearEventRangeHttpPostIn" />
      <output message="s0:ClearEventRangeHttpPostOut" />
    </operation>
    <operation name="ClearAllEvents">
      <documentation>Deletes all events from the database. The deletion is &lt;u&gt;permanent&lt;/u&gt;.</documentation>
      <input message="s0:ClearAllEventsHttpPostIn" />
      <output message="s0:ClearAllEventsHttpPostOut" />
    </operation>
    <operation name="GetEvent">
      <documentation>Retrieves a single event from the database, based on the event ID. Returns a dataset. Upon return, check the &lt;i&gt;ExtendedProperties("WebMethodResult")&lt;/i&gt; dataset property to determine the success or failure of the operation.</documentation>
      <input message="s0:GetEventHttpPostIn" />
      <output message="s0:GetEventHttpPostOut" />
    </operation>
    <operation name="GetEventsRange">
      <documentation>Retrieves a range of events from the database, based on the event ID. Returns a dataset. Upon return, check the &lt;i&gt;ExtendedProperties("WebMethodResult")&lt;/i&gt; dataset property to determine the success or failure of the operation.</documentation>
      <input message="s0:GetEventsRangeHttpPostIn" />
      <output message="s0:GetEventsRangeHttpPostOut" />
    </operation>
    <operation name="GetEventID">
      <documentation>Returns the event id of the event last inserted into the database. Event IDs are incremented by 1 with each successive event insertion. If the method is successful, the event id is returned in the form &lt;b&gt;OK&lt;i&gt;LastEventID&lt;/i&gt;&lt;/b&gt;.</documentation>
      <input message="s0:GetEventIDHttpPostIn" />
      <output message="s0:GetEventIDHttpPostOut" />
    </operation>
    <operation name="SearchEvents">
      <documentation>Retrieves a set of events from the database, based on various criteria. Returns a dataset. Upon return, check the &lt;i&gt;ExtendedProperties("WebMethodResult")&lt;/i&gt; dataset property to determine the success or failure of the operation. See the &lt;a href="docs.htm"&gt;documentation&lt;/a&gt; for an explanation of the method parameters.</documentation>
      <input message="s0:SearchEventsHttpPostIn" />
      <output message="s0:SearchEventsHttpPostOut" />
    </operation>
  </portType>
  <binding name="eventsSoap" type="s0:eventsSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document" />
    <operation name="RegisterUser">
      <soap:operation soapAction="http://ntg.webs.innerhost.com/webevents/RegisterUser" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="ActivateUser">
      <soap:operation soapAction="http://ntg.webs.innerhost.com/webevents/ActivateUser" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="DeactivateUser">
      <soap:operation soapAction="http://ntg.webs.innerhost.com/webevents/DeactivateUser" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="DeleteUser">
      <soap:operation soapAction="http://ntg.webs.innerhost.com/webevents/DeleteUser" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetNewPassword">
      <soap:operation soapAction="http://ntg.webs.innerhost.com/webevents/GetNewPassword" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="ChangePassword">
      <soap:operation soapAction="http://ntg.webs.innerhost.com/webevents/ChangePassword" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetUserActivity">
      <soap:operation soapAction="http://ntg.webs.innerhost.com/webevents/GetUserActivity" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="AddEvent">
      <soap:operation soapAction="http://ntg.webs.innerhost.com/webevents/AddEvent" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="ClearEvent">
      <soap:operation soapAction="http://ntg.webs.innerhost.com/webevents/ClearEvent" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="ClearEventRange">
      <soap:operation soapAction="http://ntg.webs.innerhost.com/webevents/ClearEventRange" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="ClearAllEvents">
      <soap:operation soapAction="http://ntg.webs.innerhost.com/webevents/ClearAllEvents" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetEvent">
      <soap:operation soapAction="http://ntg.webs.innerhost.com/webevents/GetEvent" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetEventsRange">
      <soap:operation soapAction="http://ntg.webs.innerhost.com/webevents/GetEventsRange" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetEventID">
      <soap:operation soapAction="http://ntg.webs.innerhost.com/webevents/GetEventID" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="SearchEvents">
      <soap:operation soapAction="http://ntg.webs.innerhost.com/webevents/SearchEvents" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
  </binding>
  <binding name="eventsHttpGet" type="s0:eventsHttpGet">
    <http:binding verb="GET" />
    <operation name="RegisterUser">
      <http:operation location="/RegisterUser" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ActivateUser">
      <http:operation location="/ActivateUser" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="DeactivateUser">
      <http:operation location="/DeactivateUser" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="DeleteUser">
      <http:operation location="/DeleteUser" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetNewPassword">
      <http:operation location="/GetNewPassword" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ChangePassword">
      <http:operation location="/ChangePassword" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetUserActivity">
      <http:operation location="/GetUserActivity" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="AddEvent">
      <http:operation location="/AddEvent" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ClearEvent">
      <http:operation location="/ClearEvent" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ClearEventRange">
      <http:operation location="/ClearEventRange" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ClearAllEvents">
      <http:operation location="/ClearAllEvents" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetEvent">
      <http:operation location="/GetEvent" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetEventsRange">
      <http:operation location="/GetEventsRange" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetEventID">
      <http:operation location="/GetEventID" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SearchEvents">
      <http:operation location="/SearchEvents" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
  </binding>
  <binding name="eventsHttpPost" type="s0:eventsHttpPost">
    <http:binding verb="POST" />
    <operation name="RegisterUser">
      <http:operation location="/RegisterUser" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ActivateUser">
      <http:operation location="/ActivateUser" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="DeactivateUser">
      <http:operation location="/DeactivateUser" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="DeleteUser">
      <http:operation location="/DeleteUser" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetNewPassword">
      <http:operation location="/GetNewPassword" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ChangePassword">
      <http:operation location="/ChangePassword" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetUserActivity">
      <http:operation location="/GetUserActivity" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="AddEvent">
      <http:operation location="/AddEvent" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ClearEvent">
      <http:operation location="/ClearEvent" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ClearEventRange">
      <http:operation location="/ClearEventRange" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ClearAllEvents">
      <http:operation location="/ClearAllEvents" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetEvent">
      <http:operation location="/GetEvent" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetEventsRange">
      <http:operation location="/GetEventsRange" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetEventID">
      <http:operation location="/GetEventID" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SearchEvents">
      <http:operation location="/SearchEvents" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
  </binding>
  <service name="events">
    <documentation>&lt;p&gt;The &lt;b&gt;events&lt;/b&gt; web service implements a generic event logging system that resembles the Windows event log.&lt;/p&gt;&lt;p&gt;Click &lt;a href="docs.htm"&gt;here&lt;/a&gt; for the documentation of the web service.&lt;/p&gt;&lt;p&gt;Click &lt;a href="http://ntg.webs.innerhost.com/portal/Discussions.aspx?forum_id=5&amp;"&gt;here&lt;/a&gt; for the WebEvents discussion forum.&lt;/p&gt;&lt;p&gt;Direct any questions or ideas regarding this web service &lt;a href="mailto:nickntg@hotmail.com"&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;a href="http://www.innerhost.com" target="_blank"&gt;&lt;img src="ihlogo.gif" border="0" alt="Web service hosted by iNNERHost"&gt;&lt;/a&gt;&lt;/p&gt;</documentation>
    <port name="eventsSoap" binding="s0:eventsSoap">
      <soap:address location="http://ntg.webs.innerhost.com/WebEvents/events.asmx" />
    </port>
    <port name="eventsHttpGet" binding="s0:eventsHttpGet">
      <http:address location="http://ntg.webs.innerhost.com/WebEvents/events.asmx" />
    </port>
    <port name="eventsHttpPost" binding="s0:eventsHttpPost">
      <http:address location="http://ntg.webs.innerhost.com/WebEvents/events.asmx" />
    </port>
  </service>
</definitions>