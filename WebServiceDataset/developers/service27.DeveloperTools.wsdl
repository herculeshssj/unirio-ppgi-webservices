<?xml version="1.0" encoding="utf-8"?>
<definitions xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:s0="http://dstc.edu.au" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" targetNamespace="http://dstc.edu.au" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://dstc.edu.au">
      <s:element name="GetGUID">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="strGUIDDescription" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetGUIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetGUIDResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetGUIDFromDescription">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="strGUIDDescription" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetGUIDFromDescriptionResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetGUIDFromDescriptionResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetDescriptionFromGUID">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="strGUID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetDescriptionFromGUIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetDescriptionFromGUIDResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="RegisterGUID">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="strGUID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="strGUIDDescription" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="RegisterGUIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="RegisterGUIDResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="string" nillable="true" type="s:string" />
      <s:element name="boolean" type="s:boolean" />
    </s:schema>
  </types>
  <message name="GetGUIDSoapIn">
    <part name="parameters" element="s0:GetGUID" />
  </message>
  <message name="GetGUIDSoapOut">
    <part name="parameters" element="s0:GetGUIDResponse" />
  </message>
  <message name="GetGUIDFromDescriptionSoapIn">
    <part name="parameters" element="s0:GetGUIDFromDescription" />
  </message>
  <message name="GetGUIDFromDescriptionSoapOut">
    <part name="parameters" element="s0:GetGUIDFromDescriptionResponse" />
  </message>
  <message name="GetDescriptionFromGUIDSoapIn">
    <part name="parameters" element="s0:GetDescriptionFromGUID" />
  </message>
  <message name="GetDescriptionFromGUIDSoapOut">
    <part name="parameters" element="s0:GetDescriptionFromGUIDResponse" />
  </message>
  <message name="RegisterGUIDSoapIn">
    <part name="parameters" element="s0:RegisterGUID" />
  </message>
  <message name="RegisterGUIDSoapOut">
    <part name="parameters" element="s0:RegisterGUIDResponse" />
  </message>
  <message name="GetGUIDHttpGetIn">
    <part name="strGUIDDescription" type="s:string" />
  </message>
  <message name="GetGUIDHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="GetGUIDFromDescriptionHttpGetIn">
    <part name="strGUIDDescription" type="s:string" />
  </message>
  <message name="GetGUIDFromDescriptionHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="GetDescriptionFromGUIDHttpGetIn">
    <part name="strGUID" type="s:string" />
  </message>
  <message name="GetDescriptionFromGUIDHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="RegisterGUIDHttpGetIn">
    <part name="strGUID" type="s:string" />
    <part name="strGUIDDescription" type="s:string" />
  </message>
  <message name="RegisterGUIDHttpGetOut">
    <part name="Body" element="s0:boolean" />
  </message>
  <message name="GetGUIDHttpPostIn">
    <part name="strGUIDDescription" type="s:string" />
  </message>
  <message name="GetGUIDHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="GetGUIDFromDescriptionHttpPostIn">
    <part name="strGUIDDescription" type="s:string" />
  </message>
  <message name="GetGUIDFromDescriptionHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="GetDescriptionFromGUIDHttpPostIn">
    <part name="strGUID" type="s:string" />
  </message>
  <message name="GetDescriptionFromGUIDHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="RegisterGUIDHttpPostIn">
    <part name="strGUID" type="s:string" />
    <part name="strGUIDDescription" type="s:string" />
  </message>
  <message name="RegisterGUIDHttpPostOut">
    <part name="Body" element="s0:boolean" />
  </message>
  <portType name="GUIDDictionarySoap">
    <operation name="GetGUID">
      <documentation>Function to return a GUID given a description. The description cannot be null. NOTE: if the description already exists then its GUID is return.</documentation>
      <input message="s0:GetGUIDSoapIn" />
      <output message="s0:GetGUIDSoapOut" />
    </operation>
    <operation name="GetGUIDFromDescription">
      <documentation>The GUID associated with the decription is returned.</documentation>
      <input message="s0:GetGUIDFromDescriptionSoapIn" />
      <output message="s0:GetGUIDFromDescriptionSoapOut" />
    </operation>
    <operation name="GetDescriptionFromGUID">
      <documentation>The description string associated with a GUID is returned.</documentation>
      <input message="s0:GetDescriptionFromGUIDSoapIn" />
      <output message="s0:GetDescriptionFromGUIDSoapOut" />
    </operation>
    <operation name="RegisterGUID">
      <documentation>Register an  GUID and with a description. NOTE: a GUID is 36 chars long. If the GUID or the desciption exists, false is returned.</documentation>
      <input message="s0:RegisterGUIDSoapIn" />
      <output message="s0:RegisterGUIDSoapOut" />
    </operation>
  </portType>
  <portType name="GUIDDictionaryHttpGet">
    <operation name="GetGUID">
      <documentation>Function to return a GUID given a description. The description cannot be null. NOTE: if the description already exists then its GUID is return.</documentation>
      <input message="s0:GetGUIDHttpGetIn" />
      <output message="s0:GetGUIDHttpGetOut" />
    </operation>
    <operation name="GetGUIDFromDescription">
      <documentation>The GUID associated with the decription is returned.</documentation>
      <input message="s0:GetGUIDFromDescriptionHttpGetIn" />
      <output message="s0:GetGUIDFromDescriptionHttpGetOut" />
    </operation>
    <operation name="GetDescriptionFromGUID">
      <documentation>The description string associated with a GUID is returned.</documentation>
      <input message="s0:GetDescriptionFromGUIDHttpGetIn" />
      <output message="s0:GetDescriptionFromGUIDHttpGetOut" />
    </operation>
    <operation name="RegisterGUID">
      <documentation>Register an  GUID and with a description. NOTE: a GUID is 36 chars long. If the GUID or the desciption exists, false is returned.</documentation>
      <input message="s0:RegisterGUIDHttpGetIn" />
      <output message="s0:RegisterGUIDHttpGetOut" />
    </operation>
  </portType>
  <portType name="GUIDDictionaryHttpPost">
    <operation name="GetGUID">
      <documentation>Function to return a GUID given a description. The description cannot be null. NOTE: if the description already exists then its GUID is return.</documentation>
      <input message="s0:GetGUIDHttpPostIn" />
      <output message="s0:GetGUIDHttpPostOut" />
    </operation>
    <operation name="GetGUIDFromDescription">
      <documentation>The GUID associated with the decription is returned.</documentation>
      <input message="s0:GetGUIDFromDescriptionHttpPostIn" />
      <output message="s0:GetGUIDFromDescriptionHttpPostOut" />
    </operation>
    <operation name="GetDescriptionFromGUID">
      <documentation>The description string associated with a GUID is returned.</documentation>
      <input message="s0:GetDescriptionFromGUIDHttpPostIn" />
      <output message="s0:GetDescriptionFromGUIDHttpPostOut" />
    </operation>
    <operation name="RegisterGUID">
      <documentation>Register an  GUID and with a description. NOTE: a GUID is 36 chars long. If the GUID or the desciption exists, false is returned.</documentation>
      <input message="s0:RegisterGUIDHttpPostIn" />
      <output message="s0:RegisterGUIDHttpPostOut" />
    </operation>
  </portType>
  <binding name="GUIDDictionarySoap" type="s0:GUIDDictionarySoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document" />
    <operation name="GetGUID">
      <soap:operation soapAction="http://dstc.edu.au/GetGUID" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetGUIDFromDescription">
      <soap:operation soapAction="http://dstc.edu.au/GetGUIDFromDescription" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetDescriptionFromGUID">
      <soap:operation soapAction="http://dstc.edu.au/GetDescriptionFromGUID" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="RegisterGUID">
      <soap:operation soapAction="http://dstc.edu.au/RegisterGUID" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
  </binding>
  <binding name="GUIDDictionaryHttpGet" type="s0:GUIDDictionaryHttpGet">
    <http:binding verb="GET" />
    <operation name="GetGUID">
      <http:operation location="/GetGUID" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetGUIDFromDescription">
      <http:operation location="/GetGUIDFromDescription" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetDescriptionFromGUID">
      <http:operation location="/GetDescriptionFromGUID" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="RegisterGUID">
      <http:operation location="/RegisterGUID" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
  </binding>
  <binding name="GUIDDictionaryHttpPost" type="s0:GUIDDictionaryHttpPost">
    <http:binding verb="POST" />
    <operation name="GetGUID">
      <http:operation location="/GetGUID" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetGUIDFromDescription">
      <http:operation location="/GetGUIDFromDescription" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetDescriptionFromGUID">
      <http:operation location="/GetDescriptionFromGUID" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="RegisterGUID">
      <http:operation location="/RegisterGUID" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
  </binding>
  <service name="GUIDDictionary">
    <documentation>The GUID Dictionary Service provides a web service to generate GUIDs and associate a descrption.Methods premit quering the dictionary based on GUIDs or description string. &lt;p&gt; Comments to &lt;i&gt;&lt;A HREF=mailto:herring@dstc.edu.au&gt;herring@dstc.edu.au&lt;/a&gt;&lt;/i&gt;&lt;/p&gt;</documentation>
    <port name="GUIDDictionarySoap" binding="s0:GUIDDictionarySoap">
      <soap:address location="http://erwin.dstc.edu.au/GUIDDictionaryService/GUIDDictionary.asmx" />
    </port>
    <port name="GUIDDictionaryHttpGet" binding="s0:GUIDDictionaryHttpGet">
      <http:address location="http://erwin.dstc.edu.au/GUIDDictionaryService/GUIDDictionary.asmx" />
    </port>
    <port name="GUIDDictionaryHttpPost" binding="s0:GUIDDictionaryHttpPost">
      <http:address location="http://erwin.dstc.edu.au/GUIDDictionaryService/GUIDDictionary.asmx" />
    </port>
  </service>
</definitions>