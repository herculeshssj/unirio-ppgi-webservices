<?xml version="1.0" encoding="utf-8"?>
<definitions xmlns:s1="http://www.baccar-inc.com/ws/AbstractTypes" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:s0="http://www.baccar-inc.com/ws/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" targetNamespace="http://www.baccar-inc.com/ws/" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://www.baccar-inc.com/ws/">
      <s:element name="LicenseKey">
        <s:complexType />
      </s:element>
      <s:element name="LicenseKeyResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKeyResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LegalKeySizes">
        <s:complexType />
      </s:element>
      <s:element name="LegalKeySizesResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="LegalKeySizesResult" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetRandomKey_String">
        <s:complexType />
      </s:element>
      <s:element name="GetRandomKey_StringResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetRandomKey_StringResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetRandomIV_String">
        <s:complexType />
      </s:element>
      <s:element name="GetRandomIV_StringResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetRandomIV_StringResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="EncodeStringData">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="stringData" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Key" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="IV" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="EncodeStringDataResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="EncodeStringDataResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DecodeStringData">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="stringData" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Key" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="IV" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DecodeStringDataResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="DecodeStringDataResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetRandomKey">
        <s:complexType />
      </s:element>
      <s:element name="GetRandomKeyResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetRandomKeyResult" type="s:base64Binary" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetRandomIV">
        <s:complexType />
      </s:element>
      <s:element name="GetRandomIVResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetRandomIVResult" type="s:base64Binary" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="EncodeData">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="data" type="s:base64Binary" />
            <s:element minOccurs="0" maxOccurs="1" name="Key" type="s:base64Binary" />
            <s:element minOccurs="0" maxOccurs="1" name="IV" type="s:base64Binary" />
            <s:element minOccurs="0" maxOccurs="1" name="LicenseKey" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="EncodeDataResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="EncodeDataResult" type="s:base64Binary" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DecodeData">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="data" type="s:base64Binary" />
            <s:element minOccurs="0" maxOccurs="1" name="Key" type="s:base64Binary" />
            <s:element minOccurs="0" maxOccurs="1" name="IV" type="s:base64Binary" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DecodeDataResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="DecodeDataResult" type="s:base64Binary" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="string" nillable="true" type="s:string" />
      <s:element name="int" type="s:int" />
      <s:element name="base64Binary" nillable="true" type="s:base64Binary" />
    </s:schema>
    <s:schema targetNamespace="http://www.baccar-inc.com/ws/AbstractTypes">
      <s:complexType name="StringArray">
        <s:complexContent mixed="false">
          <s:restriction base="soapenc:Array">
            <s:sequence>
              <s:element minOccurs="0" maxOccurs="unbounded" name="String" type="s:string" />
            </s:sequence>
          </s:restriction>
        </s:complexContent>
      </s:complexType>
    </s:schema>
  </types>
  <message name="LicenseKeySoapIn">
    <part name="parameters" element="s0:LicenseKey" />
  </message>
  <message name="LicenseKeySoapOut">
    <part name="parameters" element="s0:LicenseKeyResponse" />
  </message>
  <message name="LegalKeySizesSoapIn">
    <part name="parameters" element="s0:LegalKeySizes" />
  </message>
  <message name="LegalKeySizesSoapOut">
    <part name="parameters" element="s0:LegalKeySizesResponse" />
  </message>
  <message name="GetRandomKey_StringSoapIn">
    <part name="parameters" element="s0:GetRandomKey_String" />
  </message>
  <message name="GetRandomKey_StringSoapOut">
    <part name="parameters" element="s0:GetRandomKey_StringResponse" />
  </message>
  <message name="GetRandomIV_StringSoapIn">
    <part name="parameters" element="s0:GetRandomIV_String" />
  </message>
  <message name="GetRandomIV_StringSoapOut">
    <part name="parameters" element="s0:GetRandomIV_StringResponse" />
  </message>
  <message name="EncodeStringDataSoapIn">
    <part name="parameters" element="s0:EncodeStringData" />
  </message>
  <message name="EncodeStringDataSoapOut">
    <part name="parameters" element="s0:EncodeStringDataResponse" />
  </message>
  <message name="DecodeStringDataSoapIn">
    <part name="parameters" element="s0:DecodeStringData" />
  </message>
  <message name="DecodeStringDataSoapOut">
    <part name="parameters" element="s0:DecodeStringDataResponse" />
  </message>
  <message name="GetRandomKeySoapIn">
    <part name="parameters" element="s0:GetRandomKey" />
  </message>
  <message name="GetRandomKeySoapOut">
    <part name="parameters" element="s0:GetRandomKeyResponse" />
  </message>
  <message name="GetRandomIVSoapIn">
    <part name="parameters" element="s0:GetRandomIV" />
  </message>
  <message name="GetRandomIVSoapOut">
    <part name="parameters" element="s0:GetRandomIVResponse" />
  </message>
  <message name="EncodeDataSoapIn">
    <part name="parameters" element="s0:EncodeData" />
  </message>
  <message name="EncodeDataSoapOut">
    <part name="parameters" element="s0:EncodeDataResponse" />
  </message>
  <message name="DecodeDataSoapIn">
    <part name="parameters" element="s0:DecodeData" />
  </message>
  <message name="DecodeDataSoapOut">
    <part name="parameters" element="s0:DecodeDataResponse" />
  </message>
  <message name="LicenseKeyHttpGetIn" />
  <message name="LicenseKeyHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="LegalKeySizesHttpGetIn" />
  <message name="LegalKeySizesHttpGetOut">
    <part name="Body" element="s0:int" />
  </message>
  <message name="GetRandomKey_StringHttpGetIn" />
  <message name="GetRandomKey_StringHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="GetRandomIV_StringHttpGetIn" />
  <message name="GetRandomIV_StringHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="EncodeStringDataHttpGetIn">
    <part name="stringData" type="s:string" />
    <part name="Key" type="s:string" />
    <part name="IV" type="s:string" />
    <part name="LicenseKey" type="s:string" />
  </message>
  <message name="EncodeStringDataHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="DecodeStringDataHttpGetIn">
    <part name="stringData" type="s:string" />
    <part name="Key" type="s:string" />
    <part name="IV" type="s:string" />
  </message>
  <message name="DecodeStringDataHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="GetRandomKeyHttpGetIn" />
  <message name="GetRandomKeyHttpGetOut">
    <part name="Body" element="s0:base64Binary" />
  </message>
  <message name="GetRandomIVHttpGetIn" />
  <message name="GetRandomIVHttpGetOut">
    <part name="Body" element="s0:base64Binary" />
  </message>
  <message name="EncodeDataHttpGetIn">
    <part name="data" type="s1:StringArray" />
    <part name="Key" type="s1:StringArray" />
    <part name="IV" type="s1:StringArray" />
    <part name="LicenseKey" type="s:string" />
  </message>
  <message name="EncodeDataHttpGetOut">
    <part name="Body" element="s0:base64Binary" />
  </message>
  <message name="DecodeDataHttpGetIn">
    <part name="data" type="s1:StringArray" />
    <part name="Key" type="s1:StringArray" />
    <part name="IV" type="s1:StringArray" />
  </message>
  <message name="DecodeDataHttpGetOut">
    <part name="Body" element="s0:base64Binary" />
  </message>
  <message name="LicenseKeyHttpPostIn" />
  <message name="LicenseKeyHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="LegalKeySizesHttpPostIn" />
  <message name="LegalKeySizesHttpPostOut">
    <part name="Body" element="s0:int" />
  </message>
  <message name="GetRandomKey_StringHttpPostIn" />
  <message name="GetRandomKey_StringHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="GetRandomIV_StringHttpPostIn" />
  <message name="GetRandomIV_StringHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="EncodeStringDataHttpPostIn">
    <part name="stringData" type="s:string" />
    <part name="Key" type="s:string" />
    <part name="IV" type="s:string" />
    <part name="LicenseKey" type="s:string" />
  </message>
  <message name="EncodeStringDataHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="DecodeStringDataHttpPostIn">
    <part name="stringData" type="s:string" />
    <part name="Key" type="s:string" />
    <part name="IV" type="s:string" />
  </message>
  <message name="DecodeStringDataHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="GetRandomKeyHttpPostIn" />
  <message name="GetRandomKeyHttpPostOut">
    <part name="Body" element="s0:base64Binary" />
  </message>
  <message name="GetRandomIVHttpPostIn" />
  <message name="GetRandomIVHttpPostOut">
    <part name="Body" element="s0:base64Binary" />
  </message>
  <message name="EncodeDataHttpPostIn">
    <part name="data" type="s1:StringArray" />
    <part name="Key" type="s1:StringArray" />
    <part name="IV" type="s1:StringArray" />
    <part name="LicenseKey" type="s:string" />
  </message>
  <message name="EncodeDataHttpPostOut">
    <part name="Body" element="s0:base64Binary" />
  </message>
  <message name="DecodeDataHttpPostIn">
    <part name="data" type="s1:StringArray" />
    <part name="Key" type="s1:StringArray" />
    <part name="IV" type="s1:StringArray" />
  </message>
  <message name="DecodeDataHttpPostOut">
    <part name="Body" element="s0:base64Binary" />
  </message>
  <portType name="DES_CryptographySoap">
    <operation name="LicenseKey">
      <documentation>To obtain a license key please visit &lt;A href='http://www.baccar-inc.com/baccar1/WebSrvc.aspx?catID=7&amp;amp;srvID=30'&gt;www.baccar-inc.com&lt;/A&gt;</documentation>
      <input message="s0:LicenseKeySoapIn" />
      <output message="s0:LicenseKeySoapOut" />
    </operation>
    <operation name="LegalKeySizes">
      <input message="s0:LegalKeySizesSoapIn" />
      <output message="s0:LegalKeySizesSoapOut" />
    </operation>
    <operation name="GetRandomKey_String">
      <input message="s0:GetRandomKey_StringSoapIn" />
      <output message="s0:GetRandomKey_StringSoapOut" />
    </operation>
    <operation name="GetRandomIV_String">
      <input message="s0:GetRandomIV_StringSoapIn" />
      <output message="s0:GetRandomIV_StringSoapOut" />
    </operation>
    <operation name="EncodeStringData">
      <input message="s0:EncodeStringDataSoapIn" />
      <output message="s0:EncodeStringDataSoapOut" />
    </operation>
    <operation name="DecodeStringData">
      <input message="s0:DecodeStringDataSoapIn" />
      <output message="s0:DecodeStringDataSoapOut" />
    </operation>
    <operation name="GetRandomKey">
      <input message="s0:GetRandomKeySoapIn" />
      <output message="s0:GetRandomKeySoapOut" />
    </operation>
    <operation name="GetRandomIV">
      <input message="s0:GetRandomIVSoapIn" />
      <output message="s0:GetRandomIVSoapOut" />
    </operation>
    <operation name="EncodeData">
      <input message="s0:EncodeDataSoapIn" />
      <output message="s0:EncodeDataSoapOut" />
    </operation>
    <operation name="DecodeData">
      <input message="s0:DecodeDataSoapIn" />
      <output message="s0:DecodeDataSoapOut" />
    </operation>
  </portType>
  <portType name="DES_CryptographyHttpGet">
    <operation name="LicenseKey">
      <documentation>To obtain a license key please visit &lt;A href='http://www.baccar-inc.com/baccar1/WebSrvc.aspx?catID=7&amp;amp;srvID=30'&gt;www.baccar-inc.com&lt;/A&gt;</documentation>
      <input message="s0:LicenseKeyHttpGetIn" />
      <output message="s0:LicenseKeyHttpGetOut" />
    </operation>
    <operation name="LegalKeySizes">
      <input message="s0:LegalKeySizesHttpGetIn" />
      <output message="s0:LegalKeySizesHttpGetOut" />
    </operation>
    <operation name="GetRandomKey_String">
      <input message="s0:GetRandomKey_StringHttpGetIn" />
      <output message="s0:GetRandomKey_StringHttpGetOut" />
    </operation>
    <operation name="GetRandomIV_String">
      <input message="s0:GetRandomIV_StringHttpGetIn" />
      <output message="s0:GetRandomIV_StringHttpGetOut" />
    </operation>
    <operation name="EncodeStringData">
      <input message="s0:EncodeStringDataHttpGetIn" />
      <output message="s0:EncodeStringDataHttpGetOut" />
    </operation>
    <operation name="DecodeStringData">
      <input message="s0:DecodeStringDataHttpGetIn" />
      <output message="s0:DecodeStringDataHttpGetOut" />
    </operation>
    <operation name="GetRandomKey">
      <input message="s0:GetRandomKeyHttpGetIn" />
      <output message="s0:GetRandomKeyHttpGetOut" />
    </operation>
    <operation name="GetRandomIV">
      <input message="s0:GetRandomIVHttpGetIn" />
      <output message="s0:GetRandomIVHttpGetOut" />
    </operation>
    <operation name="EncodeData">
      <input message="s0:EncodeDataHttpGetIn" />
      <output message="s0:EncodeDataHttpGetOut" />
    </operation>
    <operation name="DecodeData">
      <input message="s0:DecodeDataHttpGetIn" />
      <output message="s0:DecodeDataHttpGetOut" />
    </operation>
  </portType>
  <portType name="DES_CryptographyHttpPost">
    <operation name="LicenseKey">
      <documentation>To obtain a license key please visit &lt;A href='http://www.baccar-inc.com/baccar1/WebSrvc.aspx?catID=7&amp;amp;srvID=30'&gt;www.baccar-inc.com&lt;/A&gt;</documentation>
      <input message="s0:LicenseKeyHttpPostIn" />
      <output message="s0:LicenseKeyHttpPostOut" />
    </operation>
    <operation name="LegalKeySizes">
      <input message="s0:LegalKeySizesHttpPostIn" />
      <output message="s0:LegalKeySizesHttpPostOut" />
    </operation>
    <operation name="GetRandomKey_String">
      <input message="s0:GetRandomKey_StringHttpPostIn" />
      <output message="s0:GetRandomKey_StringHttpPostOut" />
    </operation>
    <operation name="GetRandomIV_String">
      <input message="s0:GetRandomIV_StringHttpPostIn" />
      <output message="s0:GetRandomIV_StringHttpPostOut" />
    </operation>
    <operation name="EncodeStringData">
      <input message="s0:EncodeStringDataHttpPostIn" />
      <output message="s0:EncodeStringDataHttpPostOut" />
    </operation>
    <operation name="DecodeStringData">
      <input message="s0:DecodeStringDataHttpPostIn" />
      <output message="s0:DecodeStringDataHttpPostOut" />
    </operation>
    <operation name="GetRandomKey">
      <input message="s0:GetRandomKeyHttpPostIn" />
      <output message="s0:GetRandomKeyHttpPostOut" />
    </operation>
    <operation name="GetRandomIV">
      <input message="s0:GetRandomIVHttpPostIn" />
      <output message="s0:GetRandomIVHttpPostOut" />
    </operation>
    <operation name="EncodeData">
      <input message="s0:EncodeDataHttpPostIn" />
      <output message="s0:EncodeDataHttpPostOut" />
    </operation>
    <operation name="DecodeData">
      <input message="s0:DecodeDataHttpPostIn" />
      <output message="s0:DecodeDataHttpPostOut" />
    </operation>
  </portType>
  <binding name="DES_CryptographySoap" type="s0:DES_CryptographySoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document" />
    <operation name="LicenseKey">
      <soap:operation soapAction="http://www.baccar-inc.com/ws/LicenseKey" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="LegalKeySizes">
      <soap:operation soapAction="http://www.baccar-inc.com/ws/LegalKeySizes" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetRandomKey_String">
      <soap:operation soapAction="http://www.baccar-inc.com/ws/GetRandomKey_String" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetRandomIV_String">
      <soap:operation soapAction="http://www.baccar-inc.com/ws/GetRandomIV_String" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="EncodeStringData">
      <soap:operation soapAction="http://www.baccar-inc.com/ws/EncodeStringData" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="DecodeStringData">
      <soap:operation soapAction="http://www.baccar-inc.com/ws/DecodeStringData" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetRandomKey">
      <soap:operation soapAction="http://www.baccar-inc.com/ws/GetRandomKey" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetRandomIV">
      <soap:operation soapAction="http://www.baccar-inc.com/ws/GetRandomIV" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="EncodeData">
      <soap:operation soapAction="http://www.baccar-inc.com/ws/EncodeData" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="DecodeData">
      <soap:operation soapAction="http://www.baccar-inc.com/ws/DecodeData" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
  </binding>
  <binding name="DES_CryptographyHttpGet" type="s0:DES_CryptographyHttpGet">
    <http:binding verb="GET" />
    <operation name="LicenseKey">
      <http:operation location="/LicenseKey" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="LegalKeySizes">
      <http:operation location="/LegalKeySizes" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetRandomKey_String">
      <http:operation location="/GetRandomKey_String" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetRandomIV_String">
      <http:operation location="/GetRandomIV_String" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="EncodeStringData">
      <http:operation location="/EncodeStringData" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="DecodeStringData">
      <http:operation location="/DecodeStringData" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetRandomKey">
      <http:operation location="/GetRandomKey" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetRandomIV">
      <http:operation location="/GetRandomIV" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="EncodeData">
      <http:operation location="/EncodeData" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="DecodeData">
      <http:operation location="/DecodeData" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
  </binding>
  <binding name="DES_CryptographyHttpPost" type="s0:DES_CryptographyHttpPost">
    <http:binding verb="POST" />
    <operation name="LicenseKey">
      <http:operation location="/LicenseKey" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="LegalKeySizes">
      <http:operation location="/LegalKeySizes" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetRandomKey_String">
      <http:operation location="/GetRandomKey_String" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetRandomIV_String">
      <http:operation location="/GetRandomIV_String" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="EncodeStringData">
      <http:operation location="/EncodeStringData" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="DecodeStringData">
      <http:operation location="/DecodeStringData" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetRandomKey">
      <http:operation location="/GetRandomKey" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetRandomIV">
      <http:operation location="/GetRandomIV" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="EncodeData">
      <http:operation location="/EncodeData" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="DecodeData">
      <http:operation location="/DecodeData" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
  </binding>
  <service name="DES_Cryptography">
    <documentation>&lt;A href='http://www.baccar-inc.com/baccar1/WebSrvc.aspx?catID=7&amp;amp;srvID=30'&gt;&lt;img src='/images/Baccar_logo-s.gif'&gt;&lt;/A&gt;&lt;P&gt;This service implements DES algorithm.</documentation>
    <port name="DES_CryptographySoap" binding="s0:DES_CryptographySoap">
      <soap:address location="https://www.baccar-inc.com/ws/Encryption/DES_Cryptography/DES_Cryptography.asmx" />
    </port>
    <port name="DES_CryptographyHttpGet" binding="s0:DES_CryptographyHttpGet">
      <http:address location="https://www.baccar-inc.com/ws/Encryption/DES_Cryptography/DES_Cryptography.asmx" />
    </port>
    <port name="DES_CryptographyHttpPost" binding="s0:DES_CryptographyHttpPost">
      <http:address location="https://www.baccar-inc.com/ws/Encryption/DES_Cryptography/DES_Cryptography.asmx" />
    </port>
  </service>
</definitions>