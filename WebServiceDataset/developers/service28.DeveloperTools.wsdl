<?xml version="1.0" encoding="utf-8"?>
<definitions xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:s0="http://frameWERKS.com/WebServices/" xmlns:s1="http://microsoft.com/wsdl/types/" targetNamespace="http://frameWERKS.com/WebServices/" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <s:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://frameWERKS.com/WebServices/">
      <s:import namespace="http://microsoft.com/wsdl/types/" />
      <s:element name="Encryption">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="Action" type="s0:EncryptionStyle" />
            <s:element minOccurs="1" maxOccurs="1" name="StringToEffect" nillable="true" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="GivenEncryptionKey" nillable="true" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="GivenIVKey" nillable="true" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:simpleType name="EncryptionStyle">
        <s:restriction base="s:string">
          <s:enumeration value="Encrypt" />
          <s:enumeration value="Decrypt" />
        </s:restriction>
      </s:simpleType>
      <s:element name="EncryptionResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="EncryptionResult" nillable="true" type="s0:EncryptedInfo" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="EncryptedInfo">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="EncryptionKey" nillable="true" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="InitVector" nillable="true" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Result" nillable="true" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="ErrorMessage" nillable="true" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:element name="PercentOf">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="Total" nillable="true" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="SecondNumber" type="s:double" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="PercentOfResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="PercentOfResult" type="s:double" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AddPercentage">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="CurrentNumber" type="s:double" />
            <s:element minOccurs="1" maxOccurs="1" name="PercentToAdd" type="s:double" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AddPercentageResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="AddPercentageResult" type="s:double" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="IsSQLInjection">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="FieldValue" nillable="true" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="IsSQLInjectionResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="IsSQLInjectionResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="IsValidDate">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="dDate" nillable="true" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="IsValidDateResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="IsValidDateResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetMonthsBetween">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="BeginMonth" nillable="true" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="EndMonth" nillable="true" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetMonthsBetweenResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetMonthsBetweenResult" type="s:short" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetRandomNumber">
        <s:complexType />
      </s:element>
      <s:element name="GetRandomNumberResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetRandomNumberResult" type="s:double" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetRandomNumberWithBase">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="BaseValue" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetRandomNumberWithBaseResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetRandomNumberWithBaseResult" type="s:double" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetIPAddressLocation">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="IPAddress" nillable="true" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetIPAddressLocationResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetIPAddressLocationResult" nillable="true" type="s0:LocationInfo" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="LocationInfo">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="CapitalCity" nillable="true" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Certainty" type="s:unsignedByte" />
          <s:element minOccurs="1" maxOccurs="1" name="City" nillable="true" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Continent" nillable="true" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Country" nillable="true" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Currency_Code" type="s1:char" />
          <s:element minOccurs="1" maxOccurs="1" name="IsProxyNetwork" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="Region" nillable="true" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Latitude" type="s:double" />
          <s:element minOccurs="1" maxOccurs="1" name="Currency" nillable="true" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="LocationCode" nillable="true" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Longitude" type="s:double" />
          <s:element minOccurs="1" maxOccurs="1" name="Nationality_Plural" nillable="true" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Nationality_Singular" nillable="true" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Population" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="TimeZone" nillable="true" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="Errors" nillable="true" type="s:string" />
        </s:sequence>
      </s:complexType>
      <s:element name="ReadFromURL">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="URL" nillable="true" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ReadFromURLResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ReadFromURLResult" nillable="true" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="EncryptedInfo" nillable="true" type="s0:EncryptedInfo" />
      <s:element name="double" type="s:double" />
      <s:element name="boolean" type="s:boolean" />
      <s:element name="short" type="s:short" />
      <s:element name="LocationInfo" nillable="true" type="s0:LocationInfo" />
      <s:element name="string" nillable="true" type="s:string" />
    </s:schema>
    <s:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://microsoft.com/wsdl/types/">
      <s:simpleType name="char">
        <s:restriction base="s:unsignedShort" />
      </s:simpleType>
    </s:schema>
  </types>
  <message name="EncryptionSoapIn">
    <part name="parameters" element="s0:Encryption" />
  </message>
  <message name="EncryptionSoapOut">
    <part name="parameters" element="s0:EncryptionResponse" />
  </message>
  <message name="PercentOfSoapIn">
    <part name="parameters" element="s0:PercentOf" />
  </message>
  <message name="PercentOfSoapOut">
    <part name="parameters" element="s0:PercentOfResponse" />
  </message>
  <message name="AddPercentageSoapIn">
    <part name="parameters" element="s0:AddPercentage" />
  </message>
  <message name="AddPercentageSoapOut">
    <part name="parameters" element="s0:AddPercentageResponse" />
  </message>
  <message name="IsSQLInjectionSoapIn">
    <part name="parameters" element="s0:IsSQLInjection" />
  </message>
  <message name="IsSQLInjectionSoapOut">
    <part name="parameters" element="s0:IsSQLInjectionResponse" />
  </message>
  <message name="IsValidDateSoapIn">
    <part name="parameters" element="s0:IsValidDate" />
  </message>
  <message name="IsValidDateSoapOut">
    <part name="parameters" element="s0:IsValidDateResponse" />
  </message>
  <message name="GetMonthsBetweenSoapIn">
    <part name="parameters" element="s0:GetMonthsBetween" />
  </message>
  <message name="GetMonthsBetweenSoapOut">
    <part name="parameters" element="s0:GetMonthsBetweenResponse" />
  </message>
  <message name="GetRandomNumberSoapIn">
    <part name="parameters" element="s0:GetRandomNumber" />
  </message>
  <message name="GetRandomNumberSoapOut">
    <part name="parameters" element="s0:GetRandomNumberResponse" />
  </message>
  <message name="GetRandomNumberWithBaseSoapIn">
    <part name="parameters" element="s0:GetRandomNumberWithBase" />
  </message>
  <message name="GetRandomNumberWithBaseSoapOut">
    <part name="parameters" element="s0:GetRandomNumberWithBaseResponse" />
  </message>
  <message name="GetIPAddressLocationSoapIn">
    <part name="parameters" element="s0:GetIPAddressLocation" />
  </message>
  <message name="GetIPAddressLocationSoapOut">
    <part name="parameters" element="s0:GetIPAddressLocationResponse" />
  </message>
  <message name="ReadFromURLSoapIn">
    <part name="parameters" element="s0:ReadFromURL" />
  </message>
  <message name="ReadFromURLSoapOut">
    <part name="parameters" element="s0:ReadFromURLResponse" />
  </message>
  <message name="EncryptionHttpGetIn">
    <part name="Action" type="s:string" />
    <part name="StringToEffect" type="s:string" />
    <part name="GivenEncryptionKey" type="s:string" />
    <part name="GivenIVKey" type="s:string" />
  </message>
  <message name="EncryptionHttpGetOut">
    <part name="Body" element="s0:EncryptedInfo" />
  </message>
  <message name="PercentOfHttpGetIn">
    <part name="Total" type="s:string" />
    <part name="SecondNumber" type="s:string" />
  </message>
  <message name="PercentOfHttpGetOut">
    <part name="Body" element="s0:double" />
  </message>
  <message name="AddPercentageHttpGetIn">
    <part name="CurrentNumber" type="s:string" />
    <part name="PercentToAdd" type="s:string" />
  </message>
  <message name="AddPercentageHttpGetOut">
    <part name="Body" element="s0:double" />
  </message>
  <message name="IsSQLInjectionHttpGetIn">
    <part name="FieldValue" type="s:string" />
  </message>
  <message name="IsSQLInjectionHttpGetOut">
    <part name="Body" element="s0:boolean" />
  </message>
  <message name="IsValidDateHttpGetIn">
    <part name="dDate" type="s:string" />
  </message>
  <message name="IsValidDateHttpGetOut">
    <part name="Body" element="s0:boolean" />
  </message>
  <message name="GetMonthsBetweenHttpGetIn">
    <part name="BeginMonth" type="s:string" />
    <part name="EndMonth" type="s:string" />
  </message>
  <message name="GetMonthsBetweenHttpGetOut">
    <part name="Body" element="s0:short" />
  </message>
  <message name="GetRandomNumberHttpGetIn" />
  <message name="GetRandomNumberHttpGetOut">
    <part name="Body" element="s0:double" />
  </message>
  <message name="GetRandomNumberWithBaseHttpGetIn">
    <part name="BaseValue" type="s:string" />
  </message>
  <message name="GetRandomNumberWithBaseHttpGetOut">
    <part name="Body" element="s0:double" />
  </message>
  <message name="GetIPAddressLocationHttpGetIn">
    <part name="IPAddress" type="s:string" />
  </message>
  <message name="GetIPAddressLocationHttpGetOut">
    <part name="Body" element="s0:LocationInfo" />
  </message>
  <message name="ReadFromURLHttpGetIn">
    <part name="URL" type="s:string" />
  </message>
  <message name="ReadFromURLHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="EncryptionHttpPostIn">
    <part name="Action" type="s:string" />
    <part name="StringToEffect" type="s:string" />
    <part name="GivenEncryptionKey" type="s:string" />
    <part name="GivenIVKey" type="s:string" />
  </message>
  <message name="EncryptionHttpPostOut">
    <part name="Body" element="s0:EncryptedInfo" />
  </message>
  <message name="PercentOfHttpPostIn">
    <part name="Total" type="s:string" />
    <part name="SecondNumber" type="s:string" />
  </message>
  <message name="PercentOfHttpPostOut">
    <part name="Body" element="s0:double" />
  </message>
  <message name="AddPercentageHttpPostIn">
    <part name="CurrentNumber" type="s:string" />
    <part name="PercentToAdd" type="s:string" />
  </message>
  <message name="AddPercentageHttpPostOut">
    <part name="Body" element="s0:double" />
  </message>
  <message name="IsSQLInjectionHttpPostIn">
    <part name="FieldValue" type="s:string" />
  </message>
  <message name="IsSQLInjectionHttpPostOut">
    <part name="Body" element="s0:boolean" />
  </message>
  <message name="IsValidDateHttpPostIn">
    <part name="dDate" type="s:string" />
  </message>
  <message name="IsValidDateHttpPostOut">
    <part name="Body" element="s0:boolean" />
  </message>
  <message name="GetMonthsBetweenHttpPostIn">
    <part name="BeginMonth" type="s:string" />
    <part name="EndMonth" type="s:string" />
  </message>
  <message name="GetMonthsBetweenHttpPostOut">
    <part name="Body" element="s0:short" />
  </message>
  <message name="GetRandomNumberHttpPostIn" />
  <message name="GetRandomNumberHttpPostOut">
    <part name="Body" element="s0:double" />
  </message>
  <message name="GetRandomNumberWithBaseHttpPostIn">
    <part name="BaseValue" type="s:string" />
  </message>
  <message name="GetRandomNumberWithBaseHttpPostOut">
    <part name="Body" element="s0:double" />
  </message>
  <message name="GetIPAddressLocationHttpPostIn">
    <part name="IPAddress" type="s:string" />
  </message>
  <message name="GetIPAddressLocationHttpPostOut">
    <part name="Body" element="s0:LocationInfo" />
  </message>
  <message name="ReadFromURLHttpPostIn">
    <part name="URL" type="s:string" />
  </message>
  <message name="ReadFromURLHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <portType name="HelpfulFunctionsSoap">
    <operation name="Encryption">
      <documentation>Encrypt and Decrypt any string of information. The Action variable is case sensitive and is either Encrypt or Decrypt. Encryption will return an object that contains an encrypted string data as binary numbers and return keys. The Encrypt action does not require any keys. Keys are required in order to de-encypt data back to a normal string. You can optionally pass in your own encryption keys. Keys are Eight comma delimited sets of Byte numbers. Function may not always work over a GET protocol. For best results, use a POST protocol.</documentation>
      <input message="s0:EncryptionSoapIn" />
      <output message="s0:EncryptionSoapOut" />
    </operation>
    <operation name="PercentOf">
      <documentation>Function will answer two types of percentage questions. 1.Second number is what percent of the Total. Example: 10 is 10% of 100, with 100 being the total. 2. What number is 10% of 100. To do this, add a percent sign after the value for the total variable, (Total variable = 10%). Example: 5% of 100 is 5 with 100 being the SecondNumber and 5% being the total.</documentation>
      <input message="s0:PercentOfSoapIn" />
      <output message="s0:PercentOfSoapOut" />
    </operation>
    <operation name="AddPercentage">
      <documentation>Function will add a percentage to the Total of a number.</documentation>
      <input message="s0:AddPercentageSoapIn" />
      <output message="s0:AddPercentageSoapOut" />
    </operation>
    <operation name="IsSQLInjection">
      <documentation>Function is Used to determine if a Field Value possibly contains SQL Injection</documentation>
      <input message="s0:IsSQLInjectionSoapIn" />
      <output message="s0:IsSQLInjectionSoapOut" />
    </operation>
    <operation name="IsValidDate">
      <documentation>Makes sure that a Date value is truly a date value. Returns False if a time or SQL Injection is present.</documentation>
      <input message="s0:IsValidDateSoapIn" />
      <output message="s0:IsValidDateSoapOut" />
    </operation>
    <operation name="GetMonthsBetween">
      <documentation>Returns the number of months between two months. Useful for billing period displays.</documentation>
      <input message="s0:GetMonthsBetweenSoapIn" />
      <output message="s0:GetMonthsBetweenSoapOut" />
    </operation>
    <operation name="GetRandomNumber">
      <documentation>Dynamically select a number from 1 to 100,000,000,000.</documentation>
      <input message="s0:GetRandomNumberSoapIn" />
      <output message="s0:GetRandomNumberSoapOut" />
    </operation>
    <operation name="GetRandomNumberWithBase">
      <documentation>Works the same as GetRandomNumber Function, but allows you to define the base number. Returns up to 3 decimal places.</documentation>
      <input message="s0:GetRandomNumberWithBaseSoapIn" />
      <output message="s0:GetRandomNumberWithBaseSoapOut" />
    </operation>
    <operation name="GetIPAddressLocation">
      <documentation>Find important location information about any valid IP Address.</documentation>
      <input message="s0:GetIPAddressLocationSoapIn" />
      <output message="s0:GetIPAddressLocationSoapOut" />
    </operation>
    <operation name="ReadFromURL">
      <documentation>Retrieves information from any URL. If the URL is a CGI, it will execute the CGI and return the results as a string.</documentation>
      <input message="s0:ReadFromURLSoapIn" />
      <output message="s0:ReadFromURLSoapOut" />
    </operation>
  </portType>
  <portType name="HelpfulFunctionsHttpGet">
    <operation name="Encryption">
      <documentation>Encrypt and Decrypt any string of information. The Action variable is case sensitive and is either Encrypt or Decrypt. Encryption will return an object that contains an encrypted string data as binary numbers and return keys. The Encrypt action does not require any keys. Keys are required in order to de-encypt data back to a normal string. You can optionally pass in your own encryption keys. Keys are Eight comma delimited sets of Byte numbers. Function may not always work over a GET protocol. For best results, use a POST protocol.</documentation>
      <input message="s0:EncryptionHttpGetIn" />
      <output message="s0:EncryptionHttpGetOut" />
    </operation>
    <operation name="PercentOf">
      <documentation>Function will answer two types of percentage questions. 1.Second number is what percent of the Total. Example: 10 is 10% of 100, with 100 being the total. 2. What number is 10% of 100. To do this, add a percent sign after the value for the total variable, (Total variable = 10%). Example: 5% of 100 is 5 with 100 being the SecondNumber and 5% being the total.</documentation>
      <input message="s0:PercentOfHttpGetIn" />
      <output message="s0:PercentOfHttpGetOut" />
    </operation>
    <operation name="AddPercentage">
      <documentation>Function will add a percentage to the Total of a number.</documentation>
      <input message="s0:AddPercentageHttpGetIn" />
      <output message="s0:AddPercentageHttpGetOut" />
    </operation>
    <operation name="IsSQLInjection">
      <documentation>Function is Used to determine if a Field Value possibly contains SQL Injection</documentation>
      <input message="s0:IsSQLInjectionHttpGetIn" />
      <output message="s0:IsSQLInjectionHttpGetOut" />
    </operation>
    <operation name="IsValidDate">
      <documentation>Makes sure that a Date value is truly a date value. Returns False if a time or SQL Injection is present.</documentation>
      <input message="s0:IsValidDateHttpGetIn" />
      <output message="s0:IsValidDateHttpGetOut" />
    </operation>
    <operation name="GetMonthsBetween">
      <documentation>Returns the number of months between two months. Useful for billing period displays.</documentation>
      <input message="s0:GetMonthsBetweenHttpGetIn" />
      <output message="s0:GetMonthsBetweenHttpGetOut" />
    </operation>
    <operation name="GetRandomNumber">
      <documentation>Dynamically select a number from 1 to 100,000,000,000.</documentation>
      <input message="s0:GetRandomNumberHttpGetIn" />
      <output message="s0:GetRandomNumberHttpGetOut" />
    </operation>
    <operation name="GetRandomNumberWithBase">
      <documentation>Works the same as GetRandomNumber Function, but allows you to define the base number. Returns up to 3 decimal places.</documentation>
      <input message="s0:GetRandomNumberWithBaseHttpGetIn" />
      <output message="s0:GetRandomNumberWithBaseHttpGetOut" />
    </operation>
    <operation name="GetIPAddressLocation">
      <documentation>Find important location information about any valid IP Address.</documentation>
      <input message="s0:GetIPAddressLocationHttpGetIn" />
      <output message="s0:GetIPAddressLocationHttpGetOut" />
    </operation>
    <operation name="ReadFromURL">
      <documentation>Retrieves information from any URL. If the URL is a CGI, it will execute the CGI and return the results as a string.</documentation>
      <input message="s0:ReadFromURLHttpGetIn" />
      <output message="s0:ReadFromURLHttpGetOut" />
    </operation>
  </portType>
  <portType name="HelpfulFunctionsHttpPost">
    <operation name="Encryption">
      <documentation>Encrypt and Decrypt any string of information. The Action variable is case sensitive and is either Encrypt or Decrypt. Encryption will return an object that contains an encrypted string data as binary numbers and return keys. The Encrypt action does not require any keys. Keys are required in order to de-encypt data back to a normal string. You can optionally pass in your own encryption keys. Keys are Eight comma delimited sets of Byte numbers. Function may not always work over a GET protocol. For best results, use a POST protocol.</documentation>
      <input message="s0:EncryptionHttpPostIn" />
      <output message="s0:EncryptionHttpPostOut" />
    </operation>
    <operation name="PercentOf">
      <documentation>Function will answer two types of percentage questions. 1.Second number is what percent of the Total. Example: 10 is 10% of 100, with 100 being the total. 2. What number is 10% of 100. To do this, add a percent sign after the value for the total variable, (Total variable = 10%). Example: 5% of 100 is 5 with 100 being the SecondNumber and 5% being the total.</documentation>
      <input message="s0:PercentOfHttpPostIn" />
      <output message="s0:PercentOfHttpPostOut" />
    </operation>
    <operation name="AddPercentage">
      <documentation>Function will add a percentage to the Total of a number.</documentation>
      <input message="s0:AddPercentageHttpPostIn" />
      <output message="s0:AddPercentageHttpPostOut" />
    </operation>
    <operation name="IsSQLInjection">
      <documentation>Function is Used to determine if a Field Value possibly contains SQL Injection</documentation>
      <input message="s0:IsSQLInjectionHttpPostIn" />
      <output message="s0:IsSQLInjectionHttpPostOut" />
    </operation>
    <operation name="IsValidDate">
      <documentation>Makes sure that a Date value is truly a date value. Returns False if a time or SQL Injection is present.</documentation>
      <input message="s0:IsValidDateHttpPostIn" />
      <output message="s0:IsValidDateHttpPostOut" />
    </operation>
    <operation name="GetMonthsBetween">
      <documentation>Returns the number of months between two months. Useful for billing period displays.</documentation>
      <input message="s0:GetMonthsBetweenHttpPostIn" />
      <output message="s0:GetMonthsBetweenHttpPostOut" />
    </operation>
    <operation name="GetRandomNumber">
      <documentation>Dynamically select a number from 1 to 100,000,000,000.</documentation>
      <input message="s0:GetRandomNumberHttpPostIn" />
      <output message="s0:GetRandomNumberHttpPostOut" />
    </operation>
    <operation name="GetRandomNumberWithBase">
      <documentation>Works the same as GetRandomNumber Function, but allows you to define the base number. Returns up to 3 decimal places.</documentation>
      <input message="s0:GetRandomNumberWithBaseHttpPostIn" />
      <output message="s0:GetRandomNumberWithBaseHttpPostOut" />
    </operation>
    <operation name="GetIPAddressLocation">
      <documentation>Find important location information about any valid IP Address.</documentation>
      <input message="s0:GetIPAddressLocationHttpPostIn" />
      <output message="s0:GetIPAddressLocationHttpPostOut" />
    </operation>
    <operation name="ReadFromURL">
      <documentation>Retrieves information from any URL. If the URL is a CGI, it will execute the CGI and return the results as a string.</documentation>
      <input message="s0:ReadFromURLHttpPostIn" />
      <output message="s0:ReadFromURLHttpPostOut" />
    </operation>
  </portType>
  <binding name="HelpfulFunctionsSoap" type="s0:HelpfulFunctionsSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document" />
    <operation name="Encryption">
      <soap:operation soapAction="http://frameWERKS.com/WebServices/Encryption" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="PercentOf">
      <soap:operation soapAction="http://frameWERKS.com/WebServices/PercentOf" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="AddPercentage">
      <soap:operation soapAction="http://frameWERKS.com/WebServices/AddPercentage" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="IsSQLInjection">
      <soap:operation soapAction="http://frameWERKS.com/WebServices/IsSQLInjection" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="IsValidDate">
      <soap:operation soapAction="http://frameWERKS.com/WebServices/IsValidDate" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetMonthsBetween">
      <soap:operation soapAction="http://frameWERKS.com/WebServices/GetMonthsBetween" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetRandomNumber">
      <soap:operation soapAction="http://frameWERKS.com/WebServices/GetRandomNumber" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetRandomNumberWithBase">
      <soap:operation soapAction="http://frameWERKS.com/WebServices/GetRandomNumberWithBase" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetIPAddressLocation">
      <soap:operation soapAction="http://frameWERKS.com/WebServices/GetIPAddressLocation" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="ReadFromURL">
      <soap:operation soapAction="http://frameWERKS.com/WebServices/ReadFromURL" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
  </binding>
  <binding name="HelpfulFunctionsHttpGet" type="s0:HelpfulFunctionsHttpGet">
    <http:binding verb="GET" />
    <operation name="Encryption">
      <http:operation location="/Encryption" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="PercentOf">
      <http:operation location="/PercentOf" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="AddPercentage">
      <http:operation location="/AddPercentage" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="IsSQLInjection">
      <http:operation location="/IsSQLInjection" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="IsValidDate">
      <http:operation location="/IsValidDate" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetMonthsBetween">
      <http:operation location="/GetMonthsBetween" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetRandomNumber">
      <http:operation location="/GetRandomNumber" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetRandomNumberWithBase">
      <http:operation location="/GetRandomNumberWithBase" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetIPAddressLocation">
      <http:operation location="/GetIPAddressLocation" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ReadFromURL">
      <http:operation location="/ReadFromURL" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
  </binding>
  <binding name="HelpfulFunctionsHttpPost" type="s0:HelpfulFunctionsHttpPost">
    <http:binding verb="POST" />
    <operation name="Encryption">
      <http:operation location="/Encryption" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="PercentOf">
      <http:operation location="/PercentOf" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="AddPercentage">
      <http:operation location="/AddPercentage" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="IsSQLInjection">
      <http:operation location="/IsSQLInjection" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="IsValidDate">
      <http:operation location="/IsValidDate" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetMonthsBetween">
      <http:operation location="/GetMonthsBetween" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetRandomNumber">
      <http:operation location="/GetRandomNumber" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetRandomNumberWithBase">
      <http:operation location="/GetRandomNumberWithBase" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetIPAddressLocation">
      <http:operation location="/GetIPAddressLocation" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ReadFromURL">
      <http:operation location="/ReadFromURL" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
  </binding>
  <service name="HelpfulFunctions">
    <port name="HelpfulFunctionsSoap" binding="s0:HelpfulFunctionsSoap">
      <soap:address location="http://www.framewerks.com/WebServices/helpfulfunctions/helpfulfunctions.asmx" />
    </port>
    <port name="HelpfulFunctionsHttpGet" binding="s0:HelpfulFunctionsHttpGet">
      <http:address location="http://www.framewerks.com/WebServices/helpfulfunctions/helpfulfunctions.asmx" />
    </port>
    <port name="HelpfulFunctionsHttpPost" binding="s0:HelpfulFunctionsHttpPost">
      <http:address location="http://www.framewerks.com/WebServices/helpfulfunctions/helpfulfunctions.asmx" />
    </port>
  </service>
</definitions>