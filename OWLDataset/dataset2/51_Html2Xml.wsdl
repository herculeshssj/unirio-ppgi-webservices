<?xml version="1.0" encoding="utf-8"?>
<definitions xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:s0="http://www.reflectionit.nl/webservices/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" targetNamespace="http://www.reflectionit.nl/webservices/" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://www.reflectionit.nl/webservices/">
      <s:import namespace="http://www.w3.org/2001/XMLSchema" />
      <s:element name="Url2XmlNode">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="urlAddress" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Url2XmlNodeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Url2XmlNodeResult">
              <s:complexType mixed="true">
                <s:sequence>
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="HtmlString2XmlNode">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="html" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="HtmlString2XmlNodeResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="HtmlString2XmlNodeResult">
              <s:complexType mixed="true">
                <s:sequence>
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Url2XmlString">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="urlAddress" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Url2XmlStringResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="Url2XmlStringResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="HtmlString2XmlString">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="html" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="HtmlString2XmlStringResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="HtmlString2XmlStringResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="VersionInfo">
        <s:complexType />
      </s:element>
      <s:element name="VersionInfoResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="VersionInfoResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ReportStatistics">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="key" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ReportStatisticsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ReportStatisticsResult">
              <s:complexType>
                <s:sequence>
                  <s:element ref="s:schema" />
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="string" nillable="true" type="s:string" />
      <s:element name="DataSet" nillable="true">
        <s:complexType>
          <s:sequence>
            <s:element ref="s:schema" />
            <s:any />
          </s:sequence>
        </s:complexType>
      </s:element>
    </s:schema>
  </types>
  <message name="Url2XmlNodeSoapIn">
    <part name="parameters" element="s0:Url2XmlNode" />
  </message>
  <message name="Url2XmlNodeSoapOut">
    <part name="parameters" element="s0:Url2XmlNodeResponse" />
  </message>
  <message name="HtmlString2XmlNodeSoapIn">
    <part name="parameters" element="s0:HtmlString2XmlNode" />
  </message>
  <message name="HtmlString2XmlNodeSoapOut">
    <part name="parameters" element="s0:HtmlString2XmlNodeResponse" />
  </message>
  <message name="Url2XmlStringSoapIn">
    <part name="parameters" element="s0:Url2XmlString" />
  </message>
  <message name="Url2XmlStringSoapOut">
    <part name="parameters" element="s0:Url2XmlStringResponse" />
  </message>
  <message name="HtmlString2XmlStringSoapIn">
    <part name="parameters" element="s0:HtmlString2XmlString" />
  </message>
  <message name="HtmlString2XmlStringSoapOut">
    <part name="parameters" element="s0:HtmlString2XmlStringResponse" />
  </message>
  <message name="VersionInfoSoapIn">
    <part name="parameters" element="s0:VersionInfo" />
  </message>
  <message name="VersionInfoSoapOut">
    <part name="parameters" element="s0:VersionInfoResponse" />
  </message>
  <message name="ReportStatisticsSoapIn">
    <part name="parameters" element="s0:ReportStatistics" />
  </message>
  <message name="ReportStatisticsSoapOut">
    <part name="parameters" element="s0:ReportStatisticsResponse" />
  </message>
  <message name="Url2XmlNodeHttpGetIn">
    <part name="urlAddress" type="s:string" />
  </message>
  <message name="Url2XmlNodeHttpGetOut">
    <part name="Body" />
  </message>
  <message name="HtmlString2XmlNodeHttpGetIn">
    <part name="html" type="s:string" />
  </message>
  <message name="HtmlString2XmlNodeHttpGetOut">
    <part name="Body" />
  </message>
  <message name="Url2XmlStringHttpGetIn">
    <part name="urlAddress" type="s:string" />
  </message>
  <message name="Url2XmlStringHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="HtmlString2XmlStringHttpGetIn">
    <part name="html" type="s:string" />
  </message>
  <message name="HtmlString2XmlStringHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="VersionInfoHttpGetIn" />
  <message name="VersionInfoHttpGetOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="ReportStatisticsHttpGetIn">
    <part name="key" type="s:string" />
  </message>
  <message name="ReportStatisticsHttpGetOut">
    <part name="Body" element="s0:DataSet" />
  </message>
  <message name="Url2XmlNodeHttpPostIn">
    <part name="urlAddress" type="s:string" />
  </message>
  <message name="Url2XmlNodeHttpPostOut">
    <part name="Body" />
  </message>
  <message name="HtmlString2XmlNodeHttpPostIn">
    <part name="html" type="s:string" />
  </message>
  <message name="HtmlString2XmlNodeHttpPostOut">
    <part name="Body" />
  </message>
  <message name="Url2XmlStringHttpPostIn">
    <part name="urlAddress" type="s:string" />
  </message>
  <message name="Url2XmlStringHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="HtmlString2XmlStringHttpPostIn">
    <part name="html" type="s:string" />
  </message>
  <message name="HtmlString2XmlStringHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="VersionInfoHttpPostIn" />
  <message name="VersionInfoHttpPostOut">
    <part name="Body" element="s0:string" />
  </message>
  <message name="ReportStatisticsHttpPostIn">
    <part name="key" type="s:string" />
  </message>
  <message name="ReportStatisticsHttpPostOut">
    <part name="Body" element="s0:DataSet" />
  </message>
  <portType name="Html2XmlServicesSoap">
    <operation name="Url2XmlNode">
      <documentation>Public: Convert the Html page with the given Url to a XmlNode. Url example: http://www.reflectionit.nl</documentation>
      <input message="s0:Url2XmlNodeSoapIn" />
      <output message="s0:Url2XmlNodeSoapOut" />
    </operation>
    <operation name="HtmlString2XmlNode">
      <documentation>Public: Convert the Html string to a XmlNode.</documentation>
      <input message="s0:HtmlString2XmlNodeSoapIn" />
      <output message="s0:HtmlString2XmlNodeSoapOut" />
    </operation>
    <operation name="Url2XmlString">
      <documentation>Public: Convert the Html page with the given Url to a Xml string. Url example: http://www.reflectionit.nl</documentation>
      <input message="s0:Url2XmlStringSoapIn" />
      <output message="s0:Url2XmlStringSoapOut" />
    </operation>
    <operation name="HtmlString2XmlString">
      <documentation>Public: Convert the Html string to a Xml string.</documentation>
      <input message="s0:HtmlString2XmlStringSoapIn" />
      <output message="s0:HtmlString2XmlStringSoapOut" />
    </operation>
    <operation name="VersionInfo">
      <documentation>Public: Returns the web service name, current version, date and copyright information. </documentation>
      <input message="s0:VersionInfoSoapIn" />
      <output message="s0:VersionInfoSoapOut" />
    </operation>
    <operation name="ReportStatistics">
      <documentation>Private: Return usage statistics, this operation requires a Key.</documentation>
      <input message="s0:ReportStatisticsSoapIn" />
      <output message="s0:ReportStatisticsSoapOut" />
    </operation>
  </portType>
  <portType name="Html2XmlServicesHttpGet">
    <operation name="Url2XmlNode">
      <documentation>Public: Convert the Html page with the given Url to a XmlNode. Url example: http://www.reflectionit.nl</documentation>
      <input message="s0:Url2XmlNodeHttpGetIn" />
      <output message="s0:Url2XmlNodeHttpGetOut" />
    </operation>
    <operation name="HtmlString2XmlNode">
      <documentation>Public: Convert the Html string to a XmlNode.</documentation>
      <input message="s0:HtmlString2XmlNodeHttpGetIn" />
      <output message="s0:HtmlString2XmlNodeHttpGetOut" />
    </operation>
    <operation name="Url2XmlString">
      <documentation>Public: Convert the Html page with the given Url to a Xml string. Url example: http://www.reflectionit.nl</documentation>
      <input message="s0:Url2XmlStringHttpGetIn" />
      <output message="s0:Url2XmlStringHttpGetOut" />
    </operation>
    <operation name="HtmlString2XmlString">
      <documentation>Public: Convert the Html string to a Xml string.</documentation>
      <input message="s0:HtmlString2XmlStringHttpGetIn" />
      <output message="s0:HtmlString2XmlStringHttpGetOut" />
    </operation>
    <operation name="VersionInfo">
      <documentation>Public: Returns the web service name, current version, date and copyright information. </documentation>
      <input message="s0:VersionInfoHttpGetIn" />
      <output message="s0:VersionInfoHttpGetOut" />
    </operation>
    <operation name="ReportStatistics">
      <documentation>Private: Return usage statistics, this operation requires a Key.</documentation>
      <input message="s0:ReportStatisticsHttpGetIn" />
      <output message="s0:ReportStatisticsHttpGetOut" />
    </operation>
  </portType>
  <portType name="Html2XmlServicesHttpPost">
    <operation name="Url2XmlNode">
      <documentation>Public: Convert the Html page with the given Url to a XmlNode. Url example: http://www.reflectionit.nl</documentation>
      <input message="s0:Url2XmlNodeHttpPostIn" />
      <output message="s0:Url2XmlNodeHttpPostOut" />
    </operation>
    <operation name="HtmlString2XmlNode">
      <documentation>Public: Convert the Html string to a XmlNode.</documentation>
      <input message="s0:HtmlString2XmlNodeHttpPostIn" />
      <output message="s0:HtmlString2XmlNodeHttpPostOut" />
    </operation>
    <operation name="Url2XmlString">
      <documentation>Public: Convert the Html page with the given Url to a Xml string. Url example: http://www.reflectionit.nl</documentation>
      <input message="s0:Url2XmlStringHttpPostIn" />
      <output message="s0:Url2XmlStringHttpPostOut" />
    </operation>
    <operation name="HtmlString2XmlString">
      <documentation>Public: Convert the Html string to a Xml string.</documentation>
      <input message="s0:HtmlString2XmlStringHttpPostIn" />
      <output message="s0:HtmlString2XmlStringHttpPostOut" />
    </operation>
    <operation name="VersionInfo">
      <documentation>Public: Returns the web service name, current version, date and copyright information. </documentation>
      <input message="s0:VersionInfoHttpPostIn" />
      <output message="s0:VersionInfoHttpPostOut" />
    </operation>
    <operation name="ReportStatistics">
      <documentation>Private: Return usage statistics, this operation requires a Key.</documentation>
      <input message="s0:ReportStatisticsHttpPostIn" />
      <output message="s0:ReportStatisticsHttpPostOut" />
    </operation>
  </portType>
  <binding name="Html2XmlServicesSoap" type="s0:Html2XmlServicesSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document" />
    <operation name="Url2XmlNode">
      <soap:operation soapAction="http://www.reflectionit.nl/webservices/Url2XmlNode" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="HtmlString2XmlNode">
      <soap:operation soapAction="http://www.reflectionit.nl/webservices/HtmlString2XmlNode" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="Url2XmlString">
      <soap:operation soapAction="http://www.reflectionit.nl/webservices/Url2XmlString" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="HtmlString2XmlString">
      <soap:operation soapAction="http://www.reflectionit.nl/webservices/HtmlString2XmlString" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="VersionInfo">
      <soap:operation soapAction="http://www.reflectionit.nl/webservices/VersionInfo" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="ReportStatistics">
      <soap:operation soapAction="http://www.reflectionit.nl/webservices/ReportStatistics" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
  </binding>
  <binding name="Html2XmlServicesHttpGet" type="s0:Html2XmlServicesHttpGet">
    <http:binding verb="GET" />
    <operation name="Url2XmlNode">
      <http:operation location="/Url2XmlNode" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:content part="Body" type="text/xml" />
      </output>
    </operation>
    <operation name="HtmlString2XmlNode">
      <http:operation location="/HtmlString2XmlNode" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:content part="Body" type="text/xml" />
      </output>
    </operation>
    <operation name="Url2XmlString">
      <http:operation location="/Url2XmlString" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="HtmlString2XmlString">
      <http:operation location="/HtmlString2XmlString" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="VersionInfo">
      <http:operation location="/VersionInfo" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ReportStatistics">
      <http:operation location="/ReportStatistics" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
  </binding>
  <binding name="Html2XmlServicesHttpPost" type="s0:Html2XmlServicesHttpPost">
    <http:binding verb="POST" />
    <operation name="Url2XmlNode">
      <http:operation location="/Url2XmlNode" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:content part="Body" type="text/xml" />
      </output>
    </operation>
    <operation name="HtmlString2XmlNode">
      <http:operation location="/HtmlString2XmlNode" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:content part="Body" type="text/xml" />
      </output>
    </operation>
    <operation name="Url2XmlString">
      <http:operation location="/Url2XmlString" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="HtmlString2XmlString">
      <http:operation location="/HtmlString2XmlString" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="VersionInfo">
      <http:operation location="/VersionInfo" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ReportStatistics">
      <http:operation location="/ReportStatistics" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
  </binding>
  <service name="Html2XmlServices">
    <documentation>The Html2Xml webservice takes an Html text or an Url of a page and converts it into a well-formed Xml. The Html2Xml WebServices is created by &lt;a href=http://www.reflectionit.nl&gt;Reflection IT&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Read &lt;a href=http://www.reflectionit.nl/Html2Xml.asp&gt;documentation&lt;/a&gt;.</documentation>
    <port name="Html2XmlServicesSoap" binding="s0:Html2XmlServicesSoap">
      <soap:address location="http://www.html2xml.nl/Services/html2xml/version1/Html2Xml.asmx" />
    </port>
    <port name="Html2XmlServicesHttpGet" binding="s0:Html2XmlServicesHttpGet">
      <http:address location="http://www.html2xml.nl/Services/html2xml/version1/Html2Xml.asmx" />
    </port>
    <port name="Html2XmlServicesHttpPost" binding="s0:Html2XmlServicesHttpPost">
      <http:address location="http://www.html2xml.nl/Services/html2xml/version1/Html2Xml.asmx" />
    </port>
  </service>
</definitions>